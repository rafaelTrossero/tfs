/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package entidad;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

/**
 *
 * @author cristian
 */
@Entity
@NamedQueries({
    @NamedQuery(name = "Docente.findByDocente", query = "SELECT u FROM Docente u WHERE u.dni=:DNI"),
    @NamedQuery(name = "Docente.ActualizarEstado", query = "UPDATE Docente u SET u.active =:active WHERE u.id =:id "),
    @NamedQuery(name = "Docente.findById", query = "SELECT u FROM Docente u WHERE u.id=:id"),
    @NamedQuery(name = "Docente.findByDocenteTribunal", query = "SELECT u FROM Docente u WHERE u.id =:preID or u.id =:voc1ID or u.id =:voc2ID or u.id =:sup1ID or u.id =:sup2ID "),})
public class Docente extends Profesional implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    private String email;
    @Column(nullable = true)
    private Integer externo;
    @OneToOne
    @JoinColumn(name = "cargo_id", referencedColumnName = "id", nullable = false)
    private Cargo cargo;
    @OneToMany(mappedBy = "docente")
    private List<ProyectoDirector> lstProy_director;
    @ManyToOne
    @JoinColumn(name = "departamento_id", referencedColumnName = "id", nullable = false)
    private Depto departamento;
    @OneToOne(mappedBy = "director")
    private Depto deparatamento;
    @OneToOne
    @JoinColumn(name = "dedicacion_id", referencedColumnName = "id", nullable = true)
    private Dedicacion dedicacion;
    @OneToMany(mappedBy = "docente")
    private List<DocenteComision> lstComision;

    /* public Depto getDepartamento() {
     return departamento;
     }

     public void setDepartamento(Depto departamento) {
     this.departamento = departamento;
     }
     */
    //to do extends profesional
    public Dedicacion getDedicacion() {
        return dedicacion;
    }

    public void setDedicacion(Dedicacion dedicacion) {
        this.dedicacion = dedicacion;
    }

    public Cargo getCargo() {
        return cargo;
    }

    public void setCargo(Cargo cargo) {
        this.cargo = cargo;
    }

    public Depto getDepartamento() {
        return departamento;
    }

    public void setDepartamento(Depto departamento) {
        this.departamento = departamento;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Integer getExterno() {
        return externo;
    }

    public void setExterno(Integer externo) {
        this.externo = externo;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Docente)) {
            return false;
        }
        Docente other = (Docente) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "entidad.Docente[ id=" + id + " ]";
    }
}
