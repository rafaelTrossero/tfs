/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bean;

import RN.CatedraRNLocal;
import entidad.Catedra;
import java.util.ArrayList;
import java.util.List;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.model.SelectItem;

/**
 *
 * @author RafaTrossero
 */
@ManagedBean
@SessionScoped
public class ListaCatedraBean {

    
    @EJB
    private CatedraRNLocal catedraRNLocal;
    private List<Catedra> lstCatedra;
    private List<SelectItem> lstSICatedra;
    private List<Catedra> lstCatedraActiva;
    private List<SelectItem> lstSICatedraActiva;
    
    private int iActionBtnSelect;
    /**
     * Creates a new instance of ListaCatedraBean
     */
    public ListaCatedraBean() {
        this.lstCatedra = new ArrayList<Catedra>();
    }

    public CatedraRNLocal getCatedraRNLocal() {
        return catedraRNLocal;
    }

    public void setCatedraRNLocal(CatedraRNLocal catedraRNLocal) {
        this.catedraRNLocal = catedraRNLocal;
    }

    public List<Catedra> getLstCatedra() {
        return lstCatedra;
    }

    public void setLstCatedra(List<Catedra> lstCatedra) {
        this.lstCatedra = lstCatedra;
    }

    public List<SelectItem> getLstSICatedra() {
        return lstSICatedra;
    }

    public void setLstSICatedra(List<SelectItem> lstSICatedra) {
        this.lstSICatedra = lstSICatedra;
    }

    public List<Catedra> getLstCatedraActiva() {
        return lstCatedraActiva;
    }

    public void setLstCatedraActiva(List<Catedra> lstCatedraActiva) {
        this.lstCatedraActiva = lstCatedraActiva;
    }

    public List<SelectItem> getLstSICatedraActiva() {
        return lstSICatedraActiva;
    }

    public void setLstSICatedraActiva(List<SelectItem> lstSICatedraActiva) {
        this.lstSICatedraActiva = lstSICatedraActiva;
    }

    public int getiActionBtnSelect() {
        return iActionBtnSelect;
    }

    public void setiActionBtnSelect(int iActionBtnSelect) {
        this.iActionBtnSelect = iActionBtnSelect;
    }
    
     public void limpiar() {
        this.lstCatedra = new ArrayList<Catedra>();
    }

    public void cargar_catedras() {
        try {
            this.setLstCatedra(catedraRNLocal.findAll());
        } catch (Exception ex) {
            System.out.println("Error al cargar cátedras -> Causa: "
                    + ex.getMessage());
        }
    }
    
     public void cargar_SI_catedras() {
        this.setLstSICatedra(new ArrayList<SelectItem>());

        for (Catedra d : this.getLstCatedra()) {
            SelectItem si = new SelectItem(d, d.getNombre());
            this.getLstSICatedra().add(si);
        }
    }
     public void cargar_catedras_activas() {
        try {
            this.setLstCatedraActiva(this.catedraRNLocal.findAllActivo());
        } catch (Exception ex) {
            System.out.println("Error al cargar cátedras activas " + ex.toString());
        }
    }
     
     public void cargar_SI_catedras_activas() {
        this.setLstSICatedraActiva(new ArrayList<SelectItem>());

        for (Catedra a : this.getLstCatedraActiva()) {
            SelectItem ai = new SelectItem(a,a.getNombre());
            this.getLstSICatedraActiva().add(ai);
        }
    }//fin for
}
