/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package entidad;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import java.io.Serializable;
import java.sql.Time;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

/**
 *
 * @author RafaTrossero
 */
@Entity
@NamedQueries({
    @NamedQuery(name = "Catedra.FindByCarreraName", query = "SELECT u FROM Catedra u WHERE u.nombre = :nombre ORDER BY u.nombre"),
    @NamedQuery(name = "Catedra.ActualizarEstado", query = "UPDATE Catedra u SET u.active =:active WHERE u.id =:id "),
    @NamedQuery(name = "Catedra.findByNombreCarreraID", query = "SELECT u FROM Catedra u WHERE u.nombre =:nombre  AND u.id <>:id ORDER BY u.nombre"),
    @NamedQuery(name = "Catedra.SelectAll", query = "SELECT u FROM Catedra u WHERE u.active =:active "),
    @NamedQuery(name = "Ctedra.SelectCarrera", query = "SELECT u FROM Catedra u WHERE u.carrera.id =:idCarrera ORDER BY u.nombre "),
    @NamedQuery(name = "Ctedra.SelectCatedraCurso", query = "SELECT u FROM Catedra u WHERE u.curso =:idCurso ORDER BY u.nombre ")
})
public class Catedra implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    private String nombre;
    @Column(name = "active", length = 100, nullable = false)
    private Boolean active;
    @Column(nullable = true)
    private String cuatrimetre;
    @Column(nullable = true)
    private String curso;
    @Column(nullable = true)
    private String dias;
    @Column(nullable = true)
    private String horario;
    @Lob
    @Column(nullable = true, name = "CONTENIDOS_MINIMOS", length = 512)
    private String contenidos_minimos;

    @OneToMany(mappedBy = "catedra")
    private List<DocenteCatedra> lstCatedra;
    @OneToOne(mappedBy = "catedra")
    private Horario_catedra horario_catedra;

    @ManyToOne
    @JoinColumn(name = "carrera_id", referencedColumnName = "id", nullable = false)
    private Carrera carrera;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Horario_catedra getHorario_catedra() {
        return horario_catedra;
    }

    public void setHorario_catedra(Horario_catedra horario_catedra) {
        this.horario_catedra = horario_catedra;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public List<DocenteCatedra> getLstCatedra() {
        return lstCatedra;
    }

    public void setLstCatedra(List<DocenteCatedra> lstCatedra) {
        this.lstCatedra = lstCatedra;
    }

    public Carrera getCarrera() {
        return carrera;
    }

    public void setCarrera(Carrera carrera) {
        this.carrera = carrera;
    }

    public String getCuatrimetre() {
        return cuatrimetre;
    }

    public void setCuatrimetre(String cuatrimetre) {
        this.cuatrimetre = cuatrimetre;
    }

    public String getCurso() {
        return curso;
    }

    public void setCurso(String curso) {
        this.curso = curso;
    }

    public String getDias() {
        return dias;
    }

    public void setDias(String dias) {
        this.dias = dias;
    }

    public String getHorario() {
        return horario;
    }

    public void setHorario(String horario) {
        this.horario = horario;
    }

    public String getContenidos_minimos() {
        return contenidos_minimos;
    }

    public void setContenidos_minimos(String contenidos_minimos) {
        this.contenidos_minimos = contenidos_minimos;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Catedra)) {
            return false;
        }
        Catedra other = (Catedra) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "entidad.Catedra[ id=" + id + " ]";
    }

}
